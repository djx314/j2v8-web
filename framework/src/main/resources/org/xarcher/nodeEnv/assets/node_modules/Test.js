var Function1 = Java.type("scala.Function1");

var requestAPI = function(baseKey, baseNum, cb) {
    try {
        Aaaa.getAccountJson(baseNum).map(new Function1() { apply: function(s) {
            try {
                var account = JSON.parse(s);
                if (account === null || account === undefined) {
                    cb("找不到用户", null);
                } else {
                    cb(null, { account: account });
                }
            } catch (e) {
                cb(e, null);
            }
        } }, executionContext);
    } catch (e) {
        cb(e, null);
    }
};

dust.helpers.inject = function(chunk, context, bodies, params) {
    var baseKey = params.baseKey;
    var baseNum = params.baseNum;

    if (isFinite(baseNum)) {
        return chunk.map(function(inChunk) {
            requestAPI(baseKey, baseNum, function(err, result) {
                if (err && bodies["else"]) {
                    inChunk.render(bodies["else"], context.push({ error: err }));
                    inChunk.end();
                } else if (bodies.block) {
                    inChunk.render(bodies.block, context.push(result));
                    inChunk.end();
                }
            })
        });
    } else {
        return chunk.render(bodies.block, context);
    }
};

var compiled = dust.compile(template, "hello");
dust.loadSource(compiled);
dust.render("hello", JSON.parse(param), function(err, out) {
    Aaaa.answerContent(out, sourceActor);
});